const mongoose = require('../src/config/mongoose')
const passport = require('../src/config/passport')
const express = require('../src/config/express')
const logger = require('../src/config/logger')
const config = require('../src/config/config')
const http = require('http')
const port = config.PORT

let db = mongoose(logger)
let app = express(logger)
let auth = passport()
let server = http.createServer(app)

server.listen(port)
server.on('error', error => {
  if (error.syscall !== 'listen') throw error
  let bind = typeof port === 'string' ? `Pipe ${port}` : `Port ${port}`

//TODO: Look and search the codes' meanings
  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`)
      process.exit(1)
      break
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`)
      process.exit(1)
      break
    default:
      throw error
  }
})

server.on('listening', () => {
  let addr = server.address()
  let bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`
  console.log(`Listening on ${bind}`)
})

module.exports = app
