#!/usr/bin/env node

const logger = require('../src/config/logger');
const mongoose = require('../src/config/mongoose')(logger.mongoLogger);
const app = require('../src/config/express')(logger.expressLogger);

const config = require('../src/config/env');
const debug = require('debug')('stylepoint:server');
const http = require('http');
const port = config('PORT');

app.set('port', port);
let server = http.createServer(app);

function onError(error) {
    if (error.syscall !== 'listen') throw error;
    let bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(`${bind} requires elevated privileges`);
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(`${bind} is already in use`);
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    let addr = server.address();
    let bind = typeof addr === 'string'? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
